const mongoose = require('mongoose');
const Skill = require('./models/skills');
const dotenv = require('dotenv');

dotenv.config();

mongoose.connect(process.env.MONGODB_URL, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
})
  .then(async () => {
    console.log('Connected to MongoDB');

    // Predefined skills array
    const skillsArray = [
      'kotlin',
      'lua',
      'hugo',
      'sqlite',
      'styled-components',
      'julia',
      'django',
      'terraform',
      'rust',
      'yesod',
      'matlab',
      'mysql',
      'loopback',
      'sanic',
      'delphi',
      'tcl',
      'flask',
      'gitlab',
      'go',
      'polymer',
      'express',
      'gcp',
      'ada',
      'cloudflare',
      'google cloud platform',
      'aurelia',
      'c',
      'mongodb',
      'pyramid',
      'react.js',
      'cakephp',
      'grails',
      'chef',
      'groovy',
      'yarn',
      'perl',
      'socket.io',
      'puppet',
      'wxWidgets',
      'awk',
      'zepto',
      'ms sql',
      'nestjs',
      'c#',
      'python',
      'pascal',
      'aws cloudwatch',
      'redux',
      'objective-c',
      'html',
      'kubernetes',
      'visual basic',
      'apache zookeeper',
      'elixir',
      'phoenix',
      'tornado',
      'c++',
      'vuex',
      'ansible',
      'feathers.js',
      'logstash',
      'algol',
      'github',
      'jest',
      'angular',
      'vaadin',
      'ocaml',
      'redis',
      'cassandra',
      'next.js',
      'bootstrap',
      'java',
      'scratch',
      'meteor',
      'gatsby.js',
      'hapi.js',
      'cherrypy',
      'shell',
      'postgresql',
      'javascript',
      'travis ci',
      'dart',
      'nuxt.js',
      'haskell',
      'prometheus',
      'oracle',
      'serverless',
      'uwsgi',
      'coffeescript',
      'circleci',
      'ibm cloud',
      'jenkins',
      'swift',
      'assembly',
      'vb.net',
      'ruby on rails',
      'fortran',
      'aws lambda',
      'vue.js',
      'sql',
      'restify',
      'amazon web services',
      'bulma',
      'prolog',
      'aws cloudformation',
      'quasar',
      'erlang',
      'firebase',
      'powershell',
      'sinatra',
      'couchbase',
      'ember.js',
      'symfony',
      'turboGears',
      'backbone.js',
      'lisp',
      'f#',
      'ionic',
      'scala',
      'strapi',
      'sails.js',
      'bash',
      'couchdb',
      'koa',
      'apache mesos',
      'r',
      'thunderbird',
      'typescript',
      'azure',
      'php',
      'smalltalk',
      'openstack',
      'elm',
      'git',
      'jquery',
      'basic',
      'cobol',
      'd',
      'fastapi',
      'nginx',
      'ruby',
      'apache kafka',
      'scheme',
      'laravel',
    ];

    try {
      // Create a new instance of the Skill model
      const skill = new Skill({ skills: skillsArray });

      // Save the skill to the database
      await skill.save();

      console.log('Skills inserted successfully.');
      mongoose.connection.close();
    } catch (error) {
      console.error('Error inserting skills:', error);
      mongoose.connection.close();
    }
  })
  .catch((error) => {
    console.error('Error connecting to MongoDB:', error);
  });
